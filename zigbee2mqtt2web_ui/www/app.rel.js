"use strict";function m$(elem){return document.getElementById(elem)}function mDeferred(){const self=this==undefined?window:this;const trampoline={_cbSet:(resolve,reject)=>{trampoline.resolve=resolve;trampoline.reject=reject}};const p=new Promise((resolve,reject)=>{trampoline._cbSet(resolve,reject)});p.resolve=(...args)=>{return trampoline.resolve.apply(self,args)};p.reject=(...args)=>{return trampoline.reject.apply(self,args)};return p}function mAjax(cfg){const req=new XMLHttpRequest;if(!cfg.cache&&(cfg.type.toLowerCase()=="get"||cfg.type.toLowerCase()=="head")){const t=Date.now();cfg.url=cfg.url.search("\\?")==-1?`${cfg.url}?_=${t}`:`${cfg.url}&_=${t}`}req.open(cfg.type,cfg.url,true);req.onreadystatechange=()=>{if(req.readyState==XMLHttpRequest.DONE){if(req.status==200){let resp=req.responseText;if(cfg.dataType.toLowerCase()=="json"){if(resp.trim().length==0){resp={}}else{resp=JSON.parse(resp)}}cfg.success(resp)}else{cfg.error(req)}}};if(cfg.type.toLowerCase()=="put"){req.setRequestHeader("Content-type","application/x-www-form-urlencoded");req.send(cfg.data)}else{if(cfg.data){console.warning("Request.data is not null for non-PUT method, not sure if valid",cfg)}req.send()}return req}
"use strict";const ConfigPane_MQTT_MaxLogLines=30;const ConfigPane_LowBatteryLimit=20;class ConfigPane extends React.Component{static buildProps(thing_registry,remote_thing_registry,thingsPane){return{key:"global_config",thing_registry:thing_registry,remote_thing_registry:remote_thing_registry,thingsPane:thingsPane}}constructor(props){super(props);this.reorderThings=this.reorderThings.bind(this);this.reloadThings=this.reloadThings.bind(this);this.showHiddenThings=this.showHiddenThings.bind(this);this.toggleExpanded=this.toggleExpanded.bind(this);this.toggleMqttFeed=this.toggleMqttFeed.bind(this);this.showMqttMapConfirm=this.showMqttMapConfirm.bind(this);this.renderLowBatteryList=this.renderLowBatteryList.bind(this);this.userRequestedMqttNetworkmapRefresh=this.userRequestedMqttNetworkmapRefresh.bind(this);this.state={expanded:false,showingMqttFeed:false,showMqttMapConfirm:false,newMqttMapAvailable:false,mqttLog:[],thingsWithLowBattery:[]}}maybeSubscribeToMqtt(shouldSubscribe){const alreadyActive=shouldSubscribe&&this.state.showingMqttFeed;const alreadyInactive=!shouldSubscribe&&!this.state.showingMqttFeed;if(alreadyActive||alreadyInactive){return}const appendMsg=msg=>{const time=new Date;const hrs=("0"+time.getHours()).slice(-2);const mins=("0"+time.getMinutes()).slice(-2);const secs=("0"+time.getSeconds()).slice(-2);const msgTime=`${hrs}:${mins}:${secs}`;let newLog=this.state.mqttLog;newLog.push(`${msgTime}: ${JSON.stringify(msg)}`);if(newLog.length>ConfigPane_MQTT_MaxLogLines){newLog=newLog.slice(1)}this.setState({mqttLog:newLog})};if(shouldSubscribe){appendMsg("MQTT feed started");this.props.remote_thing_registry.subscribe_to_mqtt_stream("ConfigPane",msg=>appendMsg(msg))}else{this.props.remote_thing_registry.unsubscribe_to_mqtt_stream("ConfigPane");appendMsg("MQTT feed stopped")}}reorderThings(){this.props.thingsPane.onReorderThings.toggle()}reloadThings(){this.props.thing_registry.reloadThings()}showHiddenThings(){this.props.thingsPane.showHiddenThings.toggle()}toggleExpanded(){const newExpanded=!this.state.expanded;const newMqttFeedShown=newExpanded&&this.state.showingMqttFeed;this.maybeSubscribeToMqtt(newMqttFeedShown);this.setState({expanded:newExpanded,showingMqttFeed:newMqttFeedShown})}toggleMqttFeed(){const newMqttFeedShown=!this.state.showingMqttFeed;this.maybeSubscribeToMqtt(newMqttFeedShown);this.setState({showingMqttFeed:newMqttFeedShown})}showMqttMapConfirm(){this.setState({showMqttMapConfirm:!this.state.showMqttMapConfirm})}userRequestedMqttNetworkmapRefresh(){this.setState({mqttNetworkmapRequestInProgress:true});this.props.thing_registry.request_new_mqtt_networkmap().done(_=>{console.log("New networkmap may be available");this.setState({showMqttMapConfirm:false,newMqttMapAvailable:true})})}render(){if(this.state.expanded){return this.render_expanded()}return this.render_minimized()}renderLowBatteryList(){const batThings=this.props.thing_registry.battery_powered_things_state;const lowBatThings={};let needsRender=false;for(const thingName of Object.keys(batThings)){const bat=batThings[thingName];if(bat&&bat<ConfigPane_LowBatteryLimit){lowBatThings[thingName]=bat;needsRender=true}}if(!needsRender){return""}let low_bat=[];for(const thingName of Object.keys(lowBatThings)){low_bat.push(React.createElement("li",{key:`ConfigPane_lowBattery_${thingName}_li`},React.createElement("label",null,thingName,": ",lowBatThings[thingName],"%")))}return React.createElement("div",{id:"ConfigPane_low_battery",className:"container"},"Things with low battery:",React.createElement("ul",null,low_bat))}render_minimized(){return React.createElement("div",{id:"ConfigPane_config_options"},React.createElement("button",{className:"modal-button",onClick:this.toggleExpanded},"Options"))}render_expanded(){return React.createElement("div",{key:"ConfigPane_config_options",id:"ConfigPane_config_options",className:"modal"},React.createElement("button",{className:"modal-button",onClick:this.toggleExpanded},"X"),React.createElement("ul",{key:"ConfigPane_config_options"},React.createElement("li",null,React.createElement("button",{onClick:this.reorderThings},"Reorder things")),React.createElement("li",null,React.createElement("button",{onClick:this.reloadThings},"Reload things")),React.createElement("li",null,React.createElement("button",{onClick:this.showHiddenThings},"List hidden / broken things")),React.createElement("li",null,this.renderMqttNetworkMapOptions()),React.createElement("li",null,React.createElement("button",{onClick:this.toggleMqttFeed},"Show MQTT message feed"),this.render_mqtt_feed()),React.createElement("li",null,React.createElement("button",{id:"syslogOpenNewWindow",onClick:()=>window.open("/syslog/500")},"Syslog"))),this.renderLowBatteryList())}render_mqtt_feed(){if(!this.state.showingMqttFeed)return"";return React.createElement("div",{className:"card container",id:"ConfigPane_mqtt_feed",key:"ConfigPane_mqtt_feed"},React.createElement("ul",null,this.state.mqttLog.map((logLine,logIdx)=>React.createElement("li",{key:`{mqttlog_${logIdx}}`},logLine))))}renderMqttNetworkMapOptions(){if(!this.state.showMqttMapConfirm){return React.createElement("button",{onClick:this.showMqttMapConfirm},"Show MQTT network")}const networkmapOpenNewWindow=React.createElement("button",{id:"openNetworkmapNewWindow",onClick:()=>{window.open("mqtt_networkmap.html")}},"Load MQTT network map from cache");if(this.state.newMqttMapAvailable){return React.createElement("div",{className:"container card"},React.createElement("div",{className:"row"},React.createElement("button",{className:"modal-button",onClick:this.showMqttMapConfirm},"X"),networkmapOpenNewWindow))}if(this.state.mqttNetworkmapRequestInProgress){return React.createElement("div",{className:"container card"},React.createElement("div",{className:"row"},React.createElement("button",{className:"modal-button",onClick:this.showMqttMapConfirm},"X")),React.createElement("div",{className:"row"},React.createElement("label",null,"A request for a new networkmap is in progress. If you miss the reply (eg by closing this window) you can request the cached map next time.")),React.createElement("div",{className:"row"},React.createElement("button",{disabled:true},"MQTT network map request in progress"),networkmapOpenNewWindow))}return React.createElement("div",{className:"container card"},React.createElement("div",{className:"row"},React.createElement("button",{className:"modal-button",onClick:this.showMqttMapConfirm},"X")),React.createElement("div",{className:"row"},React.createElement("label",null,"Caution: this may make your network unresponsive for a few minutes. The response may take a few minutes to arrive too. Alternatively, you can try getting the cached networkmap.")),React.createElement("div",{className:"row"},React.createElement("button",{onClick:this.userRequestedMqttNetworkmapRefresh},"Request MQTT network map"),networkmapOpenNewWindow))}}
"use strict";class DebouncedRange extends React.Component{constructor(props){super(props);props.min.this_is_a_required_prop;props.max.this_is_a_required_prop;props.value.this_is_a_required_prop;const val=props.value?props.value:props.min;this.state={changing:false,value:val}}UNSAFE_componentWillReceiveProps(next_props){const val=next_props&&next_props.value?next_props.value:0;this.setState({value:val})}onChange(value){this.setState({value:value})}onMouseUp(_){this.setState({changing:false});this.props.onChange({target:{value:this.state.value}})}onMouseDown(_){this.setState({changing:true})}render(){return React.createElement("input",{type:"range",onChange:evnt=>this.onChange(evnt.target.value),onMouseUp:evnt=>{this.onMouseUp(evnt.target.value)},onMouseDown:evnt=>this.onMouseDown(evnt.target.value),onTouchStart:evnt=>this.onMouseDown(evnt.target.value),onTouchEnd:evnt=>this.onMouseUp(evnt.target.value),className:this.props.className,min:this.props.min,max:this.props.max,value:this.state.value})}}
"use strict";class Light extends React.Component{static buildProps(thing_registry,meta){var props={thing_registry:thing_registry,name:meta.name,description:meta.description,manufacturer:meta.manufacturer,model:meta.model,supports_brightness:false,brightness_min:0,brightness_max:0,supports_color_temp:false,color_temp_min:0,color_temp_max:0,color_temp_presets:[],supports_rgb:false,user_defined:meta.user_defined};for(const action_name of Object.keys(meta.actions)){var desc=meta.actions[action_name].value.meta;if(!desc)desc={};if(action_name=="brightness"){props.supports_brightness=true;props.brightness_min=desc.value_min;props.brightness_max=desc.value_max}else if(action_name=="color_temp"){props.supports_color_temp=true;props.color_temp_min=desc.value_min;props.color_temp_max=desc.value_max;props.color_temp_presets=desc.presets}else if(action_name=="color_rgb"){props.supports_rgb=true}}props.has_extra_details=props.supports_color_temp||props.supports_rgb;return props}constructor(props){super(props);this.state={state:false,brightness:props.brightness_min,color_temp:props.color_temp_min,color_rgb:"",details_shown:false};this.props.thing_registry.subscribe_to_state_updates(this.props.name,state=>{this.setState(state)})}setLightOn(v){this.setState({state:v});this.props.thing_registry.set_thing(this.props.name,`state=${v}`)}changeBrightness(val){if(val==0){this.setState({brightness:0,state:false})}else{this.setState({brightness:val,state:true})}this.props.thing_registry.set_thing(this.props.name,`brightness=${val}`)}changeColorTemp(t){this.setState({color_temp:t});this.props.thing_registry.set_thing(this.props.name,`color_temp=${t}`)}toggleDetailsPanel(){this.setState({details_shown:!this.state.details_shown})}changeRGB(v){this.setState({color_rgb:v});this.props.thing_registry.set_thing(this.props.name,`color_rgb=${v}`)}render(){return React.createElement("div",{className:"thing_div",key:`${this.props.name}_light_div`},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-primary-action"},React.createElement("input",{type:"checkbox",checked:this.state.state,value:this.state.state,onChange:evnt=>this.setLightOn(evnt.target.checked),key:`${this.props.name}_light_is_on`})),React.createElement("div",{className:"col-fixed-fill"},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-fixed-fill"},React.createElement("label",{className:"thing_name",htmlFor:`${this.props.name}_light_is_on`},this.props.name)),this.render_details_toggle()),React.createElement("div",{className:"row"},this.render_brightness_select()))),this.render_details_panel())}render_details_toggle(){if(!this.props.has_extra_details)return"";return React.createElement("div",{key:`${this.props.name}_light_details_panel_toggle_div`,className:"toggle-details-panel"},this.render_details_toggle_link())}render_details_toggle_link(){if(!this.state.details_shown){return React.createElement("a",{key:`${this.props.name}_light_details_panel_toggle`,onClick:evnt=>this.toggleDetailsPanel()},"\u25BC")}return React.createElement("a",{key:`${this.props.name}_light_details_panel_toggle`,onClick:evnt=>this.toggleDetailsPanel()},"\u25B2")}render_details_panel(){if(!this.props.has_extra_details)return"";if(!this.state.details_shown)return"";return React.createElement("div",{className:"card modal"},[this.render_rgb_picker(),this.render_color_temp()])}render_brightness_select(){if(!this.props.supports_brightness)return"";return React.createElement(DebouncedRange,{onChange:evnt=>this.changeBrightness(evnt.target.value),key:`${this.props.name}_light_brightness_slider`,min:this.props.brightness_min,max:this.props.brightness_max,value:this.state.brightness})}render_color_temp(){if(!this.props.supports_color_temp)return"";return React.createElement("div",{key:`${this.props.name}_div_color_temp`},React.createElement("label",null,"Temperature"),React.createElement(DebouncedRange,{onChange:evnt=>this.changeColorTemp(evnt.target.value),key:`${this.props.name}_light_color_temp`,min:this.props.color_temp_min,max:this.props.color_temp_max,value:this.state.color_temp}),this.render_color_temp_presets())}render_color_temp_presets(){if(!this.props.color_temp_presets||this.props.color_temp_presets.length==0){return""}var presets=[];for(const p of this.props.color_temp_presets){presets.push(React.createElement("option",{key:`${this.props.name}_option_color_temp_preset_${p.name}`,value:p.value},p.name))}return React.createElement("select",{onChange:evnt=>this.changeColorTemp(evnt.target.value),key:`${this.props.name}_div_color_temp_presets`,value:""},presets)}render_rgb_picker(){if(!this.props.supports_rgb)return"";return React.createElement("div",{key:`${this.props.name}_div_color_picker`},React.createElement("label",null,"Lamp color"),React.createElement("input",{type:"color",onChange:evt=>this.changeRGB(evt.target.value),key:`${this.props.name}_light_rgb`,value:this.state.color_rgb}))}}
"use strict";const MAX_CACHE_AGE_SECS=60*60*24*3;class LocalStorageManager{constructor(){this.max_cache_age_secs=MAX_CACHE_AGE_SECS;this.cache_idx=this.get("cache_idx",{});if(typeof this.cache_idx!=typeof{}){console.error("Can't read local storage, will clear cache");this.cache_idx={};this.save("cache_idx",this.cache_idx);localStorage.clear()}}get(key,default_val){try{const v=JSON.parse(localStorage.getItem(key));return v?v:default_val}catch(e){return default_val}}save(key,val){localStorage.setItem(key,JSON.stringify(val))}remove(key){localStorage.removeItem(key)}_cacheGet(key,ignoreExpireDate=false){const last_update=this.cache_idx[key]||0;const age=Date.now()-last_update;const cache_is_old=age>1000*this.max_cache_age_secs;if(cache_is_old&&!ignoreExpireDate){localStorage.removeItem(key);return null}return this.get(key,null)}cacheGet(key){return this._cacheGet(key)}cacheGet_ignoreExpire(key){return this._cacheGet(key,true)}cacheSave(key,val){this.cache_idx[key]=Date.now();this.save("cache_idx",this.cache_idx);this.save(key,val)}};
"use strict";class MediaPlayer extends React.Component{static buildProps(thing_registry,player){return{thing_registry:thing_registry,player:player,can_tts:Object.keys(player.actions).includes("tts_announce"),can_announce:Object.keys(player.actions).includes("user_audio_announce"),can_record_mic:"https:"==document.location.protocol,ttsLang:"es"}}constructor(props,thing_registry){super(props);this.state={is_authenticated:true,volume:0,media_info:null,announce_ui_shown:false,mic_recorder:null};this.props.thing_registry.get_thing_action_state(this.props.player.name,"media_player_state").then(state=>{if(!state.volume)state.volume=0;this.setState(state)});this.onPlayClicked=this.onPlayClicked.bind(this);this.onStopClicked=this.onStopClicked.bind(this);this.onVolumeChanged=this.onVolumeChanged.bind(this);this.onNextClicked=this.onNextClicked.bind(this);this.onPrevClicked=this.onPrevClicked.bind(this);this.onAnnouncementUiEnable=this.onAnnouncementUiEnable.bind(this);this.onAnnouncementEnd=this.onAnnouncementEnd.bind(this);this.onTTSRequested=this.onTTSRequested.bind(this);this.onMicRecRequested=this.onMicRecRequested.bind(this);this.onMicRecSend=this.onMicRecSend.bind(this)}onPlayClicked(){this.props.thing_registry.set_thing(this.props.player.name,"toggle_play")}onStopClicked(){this.props.thing_registry.set_thing(this.props.player.name,"stop")}onNextClicked(){this.props.thing_registry.set_thing(this.props.player.name,"relative_jump_to_track=1")}onPrevClicked(){this.props.thing_registry.set_thing(this.props.player.name,"relative_jump_to_track=-1")}onVolumeChanged(evnt){const vol=evnt.target.value;this.props.thing_registry.set_thing(this.props.player.name,`volume=${vol}`)}onAnnouncementUiEnable(){const st=this.state;st.announce_ui_shown=true;this.setState(st)}onAnnouncementEnd(){const st=this.state;st.announce_ui_shown=false;st.mic_recorder=null;this.setState(st)}onTTSRequested(){if(!this.props.can_tts){showGlobalError(`Requested unsupported action 'TTS' on player ${this.props.player.name}`);return}const phrase=prompt(`What should ${this.props.player.name} say?`);if(!!phrase&&phrase.length>0){this.props.thing_registry.set_thing(this.props.player.name,`tts_announce={"lang": "${this.props.ttsLang}", "phrase": "${phrase}"}`)}this.onAnnouncementEnd()}onMicRecRequested(){if(!this.props.can_announce){showGlobalError(`Requested unsupported action 'announcement' on player ${this.props.player.name}`);this.onAnnouncementEnd();return}if(!this.props.can_record_mic){showGlobalError("Requested mic recording, but this only works on https mode");this.onAnnouncementEnd();return}if(!navigator.mediaDevices){showGlobalError(`Can't access microphone (hint: this only works on https pages)`);this.onAnnouncementEnd();return}navigator.mediaDevices.getUserMedia({video:false,audio:true}).then(mic=>{const mediaRecorder=new MediaRecorder(mic);mediaRecorder.mic=mic;mediaRecorder.chunks=[];mediaRecorder.ondataavailable=e=>{mediaRecorder.chunks.push(e.data)};mediaRecorder.start();const st=this.state;st.mic_recorder=mediaRecorder;st.announce_ui_shown=false;this.setState(st)}).catch(err=>{showGlobalError(`Can't find microphone to record message: ${err}`);this.onAnnouncementEnd()})}onMicRecSend(){if(this.state.mic_recorder==null){showGlobalError("Application state error: can't find mic");this.onAnnouncementEnd();return}const micRec=this.state.mic_recorder;micRec.addEventListener("stop",_=>{const blob=new Blob(micRec.chunks,{type:"audio/ogg; codecs=opus"});if(false){const audioElement=new Audio;audioElement.src=URL.createObjectURL(blob);audioElement.controls=true;document.getElementById("ConfigPane_config_options").appendChild(audioElement)}var audioForm=new FormData;audioForm.append("audio_data",blob,"mic_cap.mp3");$.ajax({url:`/${this.props.player.name}/announce_user_recording`,data:audioForm,cache:false,contentType:false,processData:false,method:"POST",type:"POST",success:_=>{console.log("Sent user recording for announcement")},error:showGlobalError})});micRec.stop();this.onAnnouncementEnd()}render(){if(this.state.is_authenticated==false){return this.render_no_auth()}if(!this.state.media_info||Object.keys(this.state.media_info).length==0){return this.render_no_media()}return this.render_playing_media()}render_no_auth(){return React.createElement("div",{className:"bd-error text-error",key:`${this.props.player.name}_media_player_div`},this.props.player.name," is not authenticated. Goto ",React.createElement("a",{href:this.state.reauth_url,target:"_blank"},"reauthentication page")," then refresh this page.")}render_announce_ui(){if(this.state.announce_ui_shown){return this.render_active_announce_ui()}if(this.state.mic_recorder){return this.render_announce_ui_mic_recording()}if(this.props.can_tts||this.props.can_announce){return React.createElement("button",{key:`MediaPlayer_${this.props.player.name}_tts_ui_start_btn`,className:"player-tts-button",onClick:this.onAnnouncementUiEnable},this.props.player.name," Say")}return""}render_active_announce_ui(){let announceMethods=[];if(this.props.can_announce&&this.props.can_record_mic){announceMethods.push(React.createElement("li",{key:`MediaPlayerAnnounceMicRecord_${this.props.player.name}`},React.createElement("button",{key:`MediaPlayer_${this.props.player.name}_announce_mic_rec_btn`,className:"player-button",onClick:this.onMicRecRequested},"Record")))}if(this.props.can_tts){announceMethods.push(React.createElement("li",{key:`MediaPlayerAnnounceTTS_${this.props.player.name}`},React.createElement("button",{key:`MediaPlayer_${this.props.player.name}_announce_tts_btn`,className:"player-button",onClick:this.onTTSRequested},"TTS")))}return React.createElement("ul",{className:"player-announce-methods",id:`MediaPlayerAnnouncementMethods_${this.props.player.name}`},announceMethods,React.createElement("li",{key:`MediaPlayerAnnounceCancel_${this.props.player.name}`},React.createElement("button",{key:`MediaPlayer_${this.props.player.name}_announce_cancel_btn`,className:"player-button",onClick:this.onAnnouncementEnd},"Cancel")))}render_announce_ui_mic_recording(){return React.createElement("ul",{className:"player-announce-methods",id:`MediaPlayerAnnouncementMethods_${this.props.player.name}`},React.createElement("li",{key:`MediaPlayerAnnounce_${this.props.player.name}_mic_send_li`},React.createElement("button",{key:`MediaPlayer_${this.props.player.name}_mic_rec_send_btn`,className:"player-button",onClick:this.onMicRecSend},"Send")),React.createElement("li",{key:`MediaPlayerAnnounce_${this.props.player.name}_mic_rec_cancel_li`},React.createElement("button",{key:`MediaPlayer_${this.props.player.name}_mic_rec_cancel_btn`,className:"player-button",onClick:this.onAnnouncementEnd},"Cancel")))}render_no_media(){return React.createElement("div",{className:"thing_div row container",key:`${this.props.player.name}_media_player_div`},this.render_announce_ui())}render_playing_media(){return React.createElement("div",{className:"thing_div row container",key:`${this.props.player.name}_media_player_div`},this.render_announce_ui(),React.createElement("table",null,React.createElement("tbody",null,React.createElement("tr",null,React.createElement("td",{className:"col-media-icon hide-xs hide-md"},React.createElement("img",{className:"media-icon",src:this.state.media_info.icon})),React.createElement("td",{className:"col-media-mainpanel"},React.createElement("div",{className:"media-info-label"},this.state.media_info.title," - ",this.state.media_info.album_name),React.createElement("div",{className:"media-info-label"},this.props.player.name," - ",this.state.media_info.artist),React.createElement("button",{className:"player-button",onClick:this.onPlayClicked},"\u23EF\uFE0F"),React.createElement(DebouncedRange,{className:"player-volume",onChange:this.onVolumeChanged,key:`${this.props.player.name}_set_volume`,min:"0",max:"100",value:this.state.volume}),React.createElement("button",{className:"player-button",onClick:this.onPrevClicked},"\u23EA\uFE0F"),React.createElement("button",{className:"player-button",onClick:this.onNextClicked},"\u23ED\uFE0F"))))))}}class MediaPlayerList extends React.Component{static buildProps(thing_registry){return{thing_registry:thing_registry,media_players:thing_registry.mediaplayer_things,key:"MediaPlayerList"}}constructor(props,thing_registry){super(props)}render(){if(this.props.media_players.length==0)return"";let renderPlayers=[];for(const player of this.props.media_players){renderPlayers.push(React.createElement("li",{key:`MediaPlayerList_li_${player.name}`},React.createElement(MediaPlayer,MediaPlayer.buildProps(this.props.thing_registry,player))))}return React.createElement("ul",{id:"MediaPlayerList"},renderPlayers)}}
"use strict";class ScenesPane extends React.Component{constructor(props){super(props)}requestScene(name){console.log(`Requesting scene ${name}`);this.props.thing_registry.set_thing(this.props.scenes.name,name)}render(){if(!this.props.scenes)return"";let scenes=[];for(const scene_name of Object.keys(this.props.scenes.actions)){scenes.push(React.createElement("li",{key:`scene_${scene_name}`},React.createElement("button",{key:"button_set_scene_{$scene_name}",onClick:()=>this.requestScene(scene_name)},scene_name)))}return React.createElement("div",{id:"scenes",className:"card",key:"scenes_list"},React.createElement("ul",null,scenes))}}
"use strict";function simple_dygraph_plot(html_elm_id,url){let dygraph_opts={fillGraph:false,connectSeparatedPoints:true,highlightCircleSize:2,strokeWidth:1,rollPeriod:5,legend:"always",highlightSeriesOpts:{strokeWidth:3,strokeBorderWidth:1,highlightCircleSize:5}};mAjax({url:url,cache:false,type:"get",dataType:"text",success:function(t_csv){const label_elm=document.getElementById(html_elm_id+"_label");if(label_elm){dygraph_opts["labelsDiv"]=label_elm}new Dygraph(document.getElementById(html_elm_id),t_csv,dygraph_opts)}})}let gDygraphLoaded=false;class SensorsHistoryPane extends React.Component{static buildProps(thing_registry,metrics_to_plot){var script=document.createElement("script");script.src="/www/extjsdeps/dygraph.min.js";script.onload=()=>{gDygraphLoaded=true};document.head.appendChild(script);return{thing_registry:thing_registry,metrics_to_plot:metrics_to_plot,key:"SensorsHistoryPane"}}constructor(props){super(props);this.toggleExpanded=this.toggleExpanded.bind(this);this.state={expanded:false}}toggleExpanded(){this.setState({expanded:!this.state.expanded})}render(){if(!this.state.expanded){return this.render_minimized()}if(!gDygraphLoaded){return this.render_no_dygraph()}const to_render=this.render_expanded();for(const metric of this.props.metrics_to_plot){simple_dygraph_plot(`local_plot_${metric}`,`/sensors/get_single_metric_in_all_sensors_csv/${metric}`)}return to_render}render_no_dygraph(){return React.createElement("button",{className:"modal-button",onClick:this.toggleExpanded},"Sensors history: plots loading, please retry")}render_minimized(){return React.createElement("button",{className:"modal-button",onClick:this.toggleExpanded},"Sensors history")}render_expanded(){let local_plots=[];for(const metric of this.props.metrics_to_plot){local_plots.push(React.createElement("div",{className:"col card",key:`local_plot_${metric}_div`},React.createElement("h3",null,metric),React.createElement("div",{id:`local_plot_${metric}`}),React.createElement("div",{id:`local_plot_${metric}_label`})))}return React.createElement("div",{id:"SensorsHistoryPane",className:"card container row col"},React.createElement("button",{className:"modal-button",onClick:this.toggleExpanded},"X"),React.createElement("div",{className:"row"},local_plots))}}
"use strict";function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _toPropertyKey(t){var i=_toPrimitive(t,"string");return"symbol"==typeof i?i:String(i)}function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}class SensorsPane extends React.Component{static prettyMetricName(metric){switch(metric){case"temperature":return"";case"humidity":return"";case"voc_index":return"co2";case"pm25":return"pm25";case"update_time":return"@";case"contact":return"Closed";case"occupancy":return"Occupancy";default:return metric}}static prettyMetricUnit(metric){switch(metric){case"temperature":return"\xB0C";case"humidity":return"%RH";case"voc_index":return"";case"pm25":return"";case"update_time":return"";case"contact":return"";case"occupancy":return"";default:return metric}}static extraStyleFor(metric,value){const base=!value?"is-hidden":"pull-right button outline is-small bd-primary";switch(metric){case"pm25":case"update_time":case"contact":case"occupancy":return base+" hide-xs hide-sm";default:return base}}static getSensorMetrics(thing){let metrics=[];for(const thing_action_name of Object.keys(thing.actions)){if(SensorsPane.SensorMetrics.includes(thing_action_name)){metrics.push(thing_action_name)}}return metrics}static buildProps(thing_registry){let sensors={};for(const sensor of thing_registry.sensor_things){let metric_vals={};for(const metric of SensorsPane.getSensorMetrics(sensor)){if(!sensors[sensor.name]){sensors[sensor.name]={}}sensors[sensor.name][metric]=sensor.actions[metric].value._current}}let all_known_metrics=SensorsPane.SensorMetrics;all_known_metrics.push("update_time");return{key:"sensor_pane_component",sensors:sensors,sensor_names:Object.keys(sensors),all_known_metrics:all_known_metrics,thing_registry:thing_registry}}constructor(props){super(props);this.state={sensors:props.sensors};for(const sensor_name of this.props.sensor_names){props.thing_registry.subscribe_to_state_updates(sensor_name,sensor_state=>{this._updateSensor(sensor_name,sensor_state)})}}_updateSensor(sensor_name,new_sensor_state){let new_state=this.state.sensors;const updated_metrics=Object.keys(new_sensor_state);for(const metric of this.props.all_known_metrics){if(updated_metrics.includes(metric)){let val=new_sensor_state[metric];if(val===true)val="Y";if(val===false)val="N";new_state[sensor_name][metric]=val}else{new_state[sensor_name][metric]=null}}const time=new Date;const hrs=("0"+time.getHours()).slice(-2);const mins=("0"+time.getMinutes()).slice(-2);new_state[sensor_name]["update_time"]=`${hrs}:${mins}`;this.setState({sensors:new_state})}render(){return React.createElement("div",{className:"card",key:"sensors_pane",id:"sensors_pane"},React.createElement("ul",null,this.render_sensor_list()))}render_sensor_list(){let sensor_list=[];for(const sensor_name of this.props.sensor_names){sensor_list.push(React.createElement("li",{key:`sensor_${sensor_name}_li`},React.createElement("label",null,sensor_name),React.createElement("ul",{key:`sensor_${sensor_name}_row`},this.render_metrics_for_sensor(sensor_name))))}return sensor_list}render_metrics_for_sensor(sensor_name){let metrics=[];for(const metric of this.props.all_known_metrics){if(this.state.sensors[sensor_name][metric]!==null){metrics.push(React.createElement("li",{className:SensorsPane.extraStyleFor(metric,this.state.sensors[sensor_name][metric]),key:`sensor_${sensor_name}_metric_${metric}`},React.createElement("label",null,SensorsPane.prettyMetricName(metric)),this.state.sensors[sensor_name][metric],React.createElement("label",null,SensorsPane.prettyMetricUnit(metric))))}}return metrics}}_defineProperty(SensorsPane,"SensorMetrics",["temperature","humidity","voc_index","pm25"]);
"use strict";class Switch extends React.Component{static buildProps(thing_registry,meta){return{thing_registry:thing_registry,name:meta.name,description:meta.description,manufacturer:meta.manufacturer,model:meta.model,user_defined:meta.user_defined}}constructor(props,thing_registry){super(props);this.state={state:false};props.thing_registry.get_thing_state(props.name).then(state=>{this.setState(state)})}setSwitchOn(v){this.setState({state:v});this.props.thing_registry.set_thing(this.props.name,`state=${v}`)}render(){return React.createElement("div",{className:"thing_div",key:`${this.props.name}_switch_div`},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-primary-action"},React.createElement("input",{type:"checkbox",checked:this.state.state,value:this.state.state,onChange:evnt=>this.setSwitchOn(evnt.target.checked),key:`${this.props.name}_switch_is_on`})),React.createElement("div",{className:"col-fixed-fill"},React.createElement("label",{className:"thing_name",htmlFor:`${this.props.name}_switch_is_on`},this.props.name))))}}
"use strict";class ThingRegistry{constructor(cache,remote_thing_registry){this._state_update_callbacks={};this.cache=cache;this.remote_thing_registry=remote_thing_registry;this.full_network_map_metas_cache_key="network_map_meta";this.network_lights_metas_cache_key="things_metas_lights";this.network_switches_metas_cache_key="things_metas_switches";this.network_sensors_metas_cache_key="things_metas_sensors";this.network_buttons_metas_cache_key="things_metas_buttons";this.network_battery_powered_things_cache_key="things_battery_powered";this.network_mediaplayers_metas_cache_key="things_metas_mediaplayers";this.network_unknowns_metas_cache_key="things_metas_unknowns";this.scenes_metas_cache_key="things_metas_scenes";this.lights=this.cache.cacheGet_ignoreExpire(this.network_lights_metas_cache_key);this.switches=this.cache.cacheGet_ignoreExpire(this.network_switches_metas_cache_key);this.sensor_things=this.cache.cacheGet_ignoreExpire(this.network_sensors_metas_cache_key);this.button_things=this.cache.cacheGet_ignoreExpire(this.network_buttons_metas_cache_key);this.battery_powered_things=this.cache.cacheGet_ignoreExpire(this.network_battery_powered_things_cache_key);this.battery_powered_things_state={};this.mediaplayer_things=this.cache.cacheGet_ignoreExpire(this.network_mediaplayers_metas_cache_key);this.unknown_things=this.cache.cacheGet_ignoreExpire(this.network_unknowns_metas_cache_key);this.scenes=this.cache.cacheGet_ignoreExpire(this.scenes_metas_cache_key);this.probably_needs_network_rebuild=false;if(!this.lights){this.lights=[];this.probably_needs_network_rebuild=true}if(!this.switches){this.switches=[];this.probably_needs_network_rebuild=true}if(!this.unknown_things){this.unknown_things=[];this.probably_needs_network_rebuild=true}if(!this.sensor_things){this.sensor_things=[];this.probably_needs_network_rebuild=true}if(!this.button_things){this.button_things=[];this.probably_needs_network_rebuild=true}if(!this.battery_powered_things){this.battery_powered_things=[];this.probably_needs_network_rebuild=true}if(!this.mediaplayer_things){this.mediaplayer_things=[];this.probably_needs_network_rebuild=true}if(!this.scenes){this.scenes=[];this.probably_needs_network_rebuild=true}const localNetmapHash=this.get_known_things_hash();if(localNetmapHash!=null){this.remote_thing_registry.get_known_things_hash().then(remoteNetmapHash=>{if(localNetmapHash!=remoteNetmapHash){console.log("Remote netmap hash is",remoteNetmapHash,"local netmap hash is",localNetmapHash,"attempt a network reload");this.reloadThings()}})}remote_thing_registry.subscribe_to_mqtt_stream("ThingRegistry",msg=>this._on_mqtt_state_update(msg))}subscribe_to_state_updates(thing_name,callback){this._state_update_callbacks[thing_name]=callback}updateWorldState(){return this.remote_thing_registry.get_world().then(world_state=>{const available_callbacks=Object.keys(this._state_update_callbacks);for(const thing_state of world_state){for(const thing_name of Object.keys(thing_state)){if(available_callbacks.includes(thing_name)){const callback=this._state_update_callbacks[thing_name];callback(reactifyMqttStateUpdate(thing_state[thing_name]))}if(this.battery_powered_things.includes(thing_name)){this.battery_powered_things_state[thing_name]=thing_state[thing_name].battery}}}})}set_thing(thing_name,props){return this.remote_thing_registry.set_thing(thing_name,props)}get_thing_state(thing_name){return this.remote_thing_registry.get_thing_state(thing_name)}get_thing_action_state(thing_name,action_name){return this.remote_thing_registry.get_thing_action_state(thing_name,action_name)}request_new_mqtt_networkmap(){return this.remote_thing_registry.request_new_mqtt_networkmap()}_on_mqtt_state_update(msg){const available_callbacks=Object.keys(this._state_update_callbacks);for(const thing_name of Object.keys(msg)){if(available_callbacks.includes(thing_name)){const thing_state=msg[thing_name];const callback=this._state_update_callbacks[thing_name];callback(reactifyMqttStateUpdate(thing_state))}}}reloadThings(){console.log("Thing registry clearing local storage");this.cache.remove(this.full_network_map_metas_cache_key);this.cache.remove(this.network_lights_metas_cache_key);this.cache.remove(this.network_switches_metas_cache_key);this.cache.remove(this.network_sensors_metas_cache_key);this.cache.remove(this.network_buttons_metas_cache_key);this.cache.remove(this.network_battery_powered_things_cache_key);this.cache.remove(this.network_mediaplayers_metas_cache_key);this.cache.remove(this.network_unknowns_metas_cache_key);this.cache.remove(this.scenes_metas_cache_key);location.reload(false)}rebuild_network_map_if_unknown(){if(this.probably_needs_network_rebuild){return this.rebuild_network_map()}var ready=mDeferred();ready.resolve();return ready}rebuild_network_map(){var ready=mDeferred();this.get_all_things_meta().then(all_things=>{this.lights=[];this.switches=[];this.sensor_things=[];this.button_things=[];this.battery_powered_things=[];this.mediaplayer_things=[];this.unknown_things=[];this.scenes=[];for(let thing of all_things){const type=thing.thing_type?thing.thing_type:"unknown";switch(type){case"light":this.lights.push(thing);break;case"switch":this.switches.push(thing);break;case"SceneManager":this.scenes.push(thing);break;case"sensor":this.sensor_things.push(thing);break;case"button":this.button_things.push(thing);break;case"media_player":this.mediaplayer_things.push(thing);break;case"unknown":default:this.unknown_things.push(thing);break}if(thing.actions.battery!=null){this.battery_powered_things.push(thing.name)}}this.cache.cacheSave(this.network_lights_metas_cache_key,this.lights);this.cache.cacheSave(this.network_switches_metas_cache_key,this.switches);this.cache.cacheSave(this.network_unknowns_metas_cache_key,this.unknown_things);this.cache.cacheSave(this.network_sensors_metas_cache_key,this.sensor_things);this.cache.cacheSave(this.network_buttons_metas_cache_key,this.button_things);this.cache.cacheSave(this.network_battery_powered_things_cache_key,this.battery_powered_things);this.cache.cacheSave(this.network_mediaplayers_metas_cache_key,this.mediaplayer_things);this.cache.cacheSave(this.scenes_metas_cache_key,this.scenes);this.probably_needs_network_rebuild=false;ready.resolve()});return ready}get_all_things_meta(){var ready=mDeferred();let netmap=this.cache.cacheGet_ignoreExpire(this.full_network_map_metas_cache_key);if(netmap!=null){ready.resolve(netmap);return ready}this.uncached_get_all_things_meta(ready).then(netmap=>{this.cache.cacheSave(this.full_network_map_metas_cache_key,netmap);ready.resolve(netmap)});return ready}uncached_get_all_things_meta(){var ready=mDeferred();this.remote_thing_registry.ls().then(names=>{let all_metas=[];let meta_rqs=[];for(let name of names){let meta_rq=this.remote_thing_registry.get_thing_meta(name);meta_rq.then(meta=>{all_metas.push(meta);if(all_metas.length==names.length){ready.resolve(all_metas)}});meta_rqs.push(meta_rq)}});return ready}get_known_things_hash(){const netmap_metas=this.cache.cacheGet_ignoreExpire(this.full_network_map_metas_cache_key);if(!netmap_metas){return null}let hash=0;for(var name of netmap_metas.map(meta=>meta.name).sort()){for(let i=0;i<name.length;i++){hash=(hash<<2)-hash+name.charCodeAt(i);hash=hash|0}}return hash}}
"use strict";class ThingsPane extends React.Component{static buildProps(local_storage,things){const cbObjReorderThings={toggle:null};const cbShowHiddenThings={toggle:null};return{key:"global_thing_list",things:things,local_storage:local_storage,onReorderThings:cbObjReorderThings,showHiddenThings:cbShowHiddenThings}}_getOrderedThings(props){let default_things_order=[];for(const elm of props.things){default_things_order.push(elm.props.name)}let cached_things_order=this.props.local_storage.get("ThingsPane.things_order",default_things_order);const set_existing_things=new Set(default_things_order);const set_cached_things_order=new Set(cached_things_order);let order_changed=false;for(const[idx,elm]of cached_things_order.entries()){if(!set_existing_things.has(elm)){delete cached_things_order[idx];order_changed=true}}cached_things_order=cached_things_order.filter(x=>x!=null);for(const elm of default_things_order){if(!set_cached_things_order.has(elm)){cached_things_order.push(elm);order_changed=true}}if(order_changed){this.props.local_storage.save("ThingsPane.things_order",cached_things_order)}return cached_things_order}constructor(props){super(props);this.props.onReorderThings.toggle=()=>{this.setState({reordering:!this.state.reordering})};this.props.showHiddenThings.toggle=()=>{this.setState({showHiddenThings:!this.state.showHiddenThings})};const things_lookup={};for(const elm of props.things){things_lookup[elm.props.name]=elm}this.state={things_lookup:things_lookup,things_order:this._getOrderedThings(props),reordering:false,showHiddenThings:false}}reorder(idx,delta){if(idx+delta<0||idx+delta>=this.state.things_order.length){return}let new_order=this.state.things_order;const tmp=new_order[idx];new_order[idx]=new_order[idx+delta];new_order[idx+delta]=tmp;this.props.local_storage.save("ThingsPane.things_order",new_order);this.setState({things_order:new_order})}render(){if(this.state.reordering)return this.render_reordering();return React.createElement("div",{key:"global_thing_list_pane"},this._buildList())}_buildList(){const groupedThingList=new Map;groupedThingList.set(null,[]);let current_group=null;for(const thing_name of this.state.things_order){var _thing$props$user_def,_thing$props$user_def2;const thing=this.state.things_lookup[thing_name];const classNames=!this.state.showHiddenThings&&(_thing$props$user_def=thing.props.user_defined)!==null&&_thing$props$user_def!==void 0&&_thing$props$user_def.ui_hide?"is-hidden":"";let group=(_thing$props$user_def2=thing.props.user_defined)===null||_thing$props$user_def2===void 0?void 0:_thing$props$user_def2.ui_group;if(group===undefined)group=null;if(group!=current_group){current_group=group;if(!groupedThingList.has(current_group)){groupedThingList.set(current_group,[])}}groupedThingList.get(current_group).push(React.createElement("li",{className:classNames,key:`${thing.props.name}_thing_li`},thing))}const groupList=[];for(const e of groupedThingList.entries()){const group=e[0];const thinglist=e[1];groupList.push(React.createElement("div",{className:"card",key:`${group}_thing_pane_group`},React.createElement("b",null,group),React.createElement("ul",{key:`${group}_thing_pane_group_ul`},thinglist)))}return groupList}render_reordering(){const thing_list=this.state.things_order.map((thing_name,idx)=>{const thing=this.state.things_lookup[thing_name];const reorder_up=()=>{return idx==0?"\u25B2":React.createElement("a",{className:"thing-list-reorder-link",onClick:evnt=>this.reorder(idx,-1)},"\u25B2")};const reorder_down=()=>{return idx==this.state.things_order.length-1?"\u25BC":React.createElement("a",{className:"thing-list-reorder-link",onClick:evnt=>this.reorder(idx,+1)},"\u25BC")};return React.createElement("li",{key:`${thing.props.name}_thing_reorder_li`},React.createElement("div",{className:"thing_div row",key:`${thing.props.name}_reorder_div`},React.createElement("div",{className:"col-primary-action"},reorder_down(),reorder_up()),React.createElement("div",{className:"col-fixed-fill"},React.createElement("h3",null,thing.props.name))))});return React.createElement("ul",{key:"global_thing_list_pane"},thing_list)}}
"use strict";class VisibilityCallback{constructor(cb,intervalMs){this.install_visibility_callback()}app_became_hidden(){}app_became_visible(){}static warn_if_visibility_not_supported(visChangeAction){if(this.visibility_checked!==undefined)return;this.visibility_checked=true;if(visChangeAction===undefined){console.log("Visibility changes not supported: UI elements won't auto-refresh")}}install_visibility_callback(){if(this.vis_cb_installed!==undefined)return;this.vis_cb_installed=true;var hidden,visChangeAction;if(typeof document.hidden!=="undefined"){hidden="hidden";visChangeAction="visibilitychange"}else if(typeof document.msHidden!=="undefined"){hidden="msHidden";visChangeAction="msvisibilitychange"}else if(typeof document.webkitHidden!=="undefined"){hidden="webkitHidden";visChangeAction="webkitvisibilitychange"}VisibilityCallback.warn_if_visibility_not_supported(visChangeAction);if(visChangeAction!==undefined){document.addEventListener(visChangeAction,()=>{const app_hidden=document[hidden];app_hidden?this.app_became_hidden():this.app_became_visible()})}}};
"use strict";function reactifyMqttStateUpdate(state_update){let react_state_update={};for(let state_key of Object.keys(state_update)){const val=state_update[state_key];if(val!==null){react_state_update[state_key]=val;if(state_key=="state"){const is_str=!!val.toLowerCase;if(is_str&&["0","false","off"].includes(val.toLowerCase())){react_state_update[state_key]=false}}}}return react_state_update}class Zigbee2Mqtt2Flask2js{constructor(ui_display_error){this.socket=null;this.netmap_socket=null;this._on_mqtt_message_cb={};this._ui_display_error=ui_display_error}_get(url){var ready=mDeferred();mAjax({url:url,cache:false,type:"get",dataType:"json",success:ready.resolve,error:err=>{const msg=`Set error ${err.status} ${err.statusText}: ${err.responseText}`;console.log(msg);this._ui_display_error(msg);ready.reject()}});return ready}_put(url,val){var ready=mDeferred();mAjax({url:url,cache:false,type:"put",data:val,dataType:"json",success:ready.resolve,error:err=>{const msg=`Set error ${err.status} ${err.statusText}: ${err.responseText}`;console.log(msg);this._ui_display_error(msg);ready.reject()}});return ready}ls(){return this._get("/ls")}get_world(){return this._get("/get_world")}get_known_things_hash(){return this._get("/get_known_things_hash")}get_thing_meta(thing_name){return this._get(`/meta/${thing_name}`)}get_thing_action_meta(thing_name,action_name){return this._get(`/meta/${thing_name}/${action_name}`)}get_thing_state(thing_name){var ready=mDeferred();this._get(`/get/${thing_name}`).then(new_state=>{ready.resolve(reactifyMqttStateUpdate(new_state))});return ready}get_thing_action_state(thing_name,action_name){return this._get(`/get/${thing_name}/${action_name}`)}set_thing(thing_name,state){return this._put(`/set/${thing_name}`,state)}subscribe_to_mqtt_stream(callback_id,callback){if(Object.keys(this._on_mqtt_message_cb).length==0){this._start_mqtt_stream()}this._on_mqtt_message_cb[callback_id]=callback}unsubscribe_to_mqtt_stream(callback_id){delete this._on_mqtt_message_cb[callback_id];if(Object.keys(this._on_mqtt_message_cb).length==0){this.stop_mqtt_stream()}}get_cached_mqtt_networkmap(){return this._get("/mqtt_networkmap")}request_new_mqtt_networkmap(){var ready=mDeferred();if(!this.netmap_socket){console.log("Requesting new network map");this.netmap_socket=io.connect("http://"+document.domain+":"+location.port);this.netmap_socket.onAny(console.log);this.netmap_socket.on("mqtt_networkmap",msg=>{console.log("Received network map update");this.netmap_socket=null;ready.resolve(msg)});this.netmap_socket.on("disconnect",()=>{this.netmap_socket=null;ready.resolve(null)});this._put("/mqtt_networkmap/start_mapping",null)}else{ready.reject("Netmap request in progress")}return ready}_start_mqtt_stream(on_message){var script=document.createElement("script");script.src="/www/extjsdeps/socket.io.js";document.head.appendChild(script);const self=this;script.onload=()=>{self._sockIoReady()}}_sockIoReady(){const forward_msg=msg=>{console.log("Received mqtt_thing_msg ",msg);for(const cb_id of Object.keys(this._on_mqtt_message_cb)){this._on_mqtt_message_cb[cb_id](msg)}};const sock_url=document.location.protocol+"//"+document.location.host;console.log(`SockIO ready, connecting to websocket at ${sock_url}`);this.socket=io.connect(sock_url);this.socket.on("mqtt_thing_msg",forward_msg);this.socket.on("mqtt_networkmap",forward_msg);this.socket.on("connect",()=>{const msg="Connected to server";console.log(msg);forward_msg(msg)});this.socket.on("disconnect",()=>{const msg="Disconnected! Will try reconnecting.";console.log(msg);forward_msg(msg)})}stop_mqtt_stream(){this.socket.destroy();this.socket=null}}
"use strict";const showGlobalError=msg=>{m$("global_error_msg").innerText=msg;m$("global_error_ui").classList.remove("no-error")};m$("global_error_ui_ack").onclick=()=>{m$("global_error_msg").innerText="";m$("global_error_ui").classList.add("no-error")};window.remote_thing_registry=new Zigbee2Mqtt2Flask2js(showGlobalError);window.local_storage=new LocalStorageManager;window.thing_registry=new ThingRegistry(local_storage,remote_thing_registry);const INTERESTING_PLOT_METRICS=["temperature","humidity","pm25","voc_index"];const app_visibility=new VisibilityCallback;app_visibility.app_became_visible=()=>{console.log("App became visible, will refresh state");thing_registry.updateWorldState()};thing_registry.rebuild_network_map_if_unknown().then(_=>{let things=[];for(const meta of thing_registry.lights){const props=Light.buildProps(thing_registry,meta);things.push(React.createElement(Light,props))}for(const meta of thing_registry.switches){const props=Switch.buildProps(thing_registry,meta);things.push(React.createElement(Switch,props))}const thingsPaneProps=ThingsPane.buildProps(local_storage,things);ReactDOM.createRoot(document.querySelector("#things_root")).render(React.createElement(ThingsPane,thingsPaneProps));ReactDOM.createRoot(document.querySelector("#others_root")).render([React.createElement(ScenesPane,{key:"scenes_list",thing_registry:thing_registry,scenes:thing_registry.scenes[0]}),React.createElement(SensorsPane,SensorsPane.buildProps(thing_registry)),React.createElement(MediaPlayerList,MediaPlayerList.buildProps(thing_registry))]);ReactDOM.createRoot(document.querySelector("#sensors_history")).render([React.createElement(SensorsHistoryPane,SensorsHistoryPane.buildProps(thing_registry,INTERESTING_PLOT_METRICS))]);ReactDOM.createRoot(document.querySelector("#config")).render([React.createElement(ConfigPane,ConfigPane.buildProps(thing_registry,remote_thing_registry,thingsPaneProps))])});thing_registry.updateWorldState();m$("global_loading").classList.add("app-finished-loading");m$("global_loading").classList.remove("app-loading");
